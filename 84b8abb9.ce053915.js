/*! For license information please see 84b8abb9.ce053915.js.LICENSE.txt */
(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{143:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return d})),n.d(t,"default",(function(){return p}));var a=n(1),i=n(9),r=(n(0),n(165)),b=n(187),l=n(188),c={id:"verifications",title:"Verifications",sidebar_label:"Verifications"},o={id:"verifications",title:"Verifications",description:"import Tabs from '@theme/Tabs';",source:"@site/docs/verifications.mdx",permalink:"/docs/verifications",sidebar_label:"Verifications",sidebar:"someSidebar",previous:{title:"Credentials Overview",permalink:"/docs/credentials"},next:{title:"Organizations",permalink:"/docs/organizations"}},d=[{value:"Introduction",id:"introduction",children:[]},{value:"Create a Verification Definition",id:"create-a-verification-definition",children:[{value:"Proof Request Parameters",id:"proof-request-parameters",children:[]},{value:"Response",id:"response",children:[]}]},{value:"List all Verification Definitions",id:"list-all-verification-definitions",children:[{value:"Response",id:"response-1",children:[]}]},{value:"Get the specified verification definition",id:"get-the-specified-verification-definition",children:[{value:"Parameters",id:"parameters",children:[]},{value:"Response",id:"response-2",children:[]}]},{value:"List all verifications for a connection",id:"list-all-verifications-for-a-connection",children:[{value:"Parameters",id:"parameters-1",children:[]},{value:"Response",id:"response-3",children:[]}]},{value:"Create a Verification",id:"create-a-verification",children:[{value:"Request",id:"request",children:[]},{value:"Parameters",id:"parameters-2",children:[]},{value:"Response",id:"response-4",children:[]}]},{value:"Get verification by identifier",id:"get-verification-by-identifier",children:[{value:"Parameters",id:"parameters-3",children:[]},{value:"Response",id:"response-5",children:[]}]},{value:"Execute Verification for Ledger",id:"execute-verification-for-ledger",children:[{value:"Parameters",id:"parameters-4",children:[]},{value:"Response",id:"response-6",children:[]}]},{value:"Additional Information",id:"additional-information",children:[{value:"Explanation of Restrictions List",id:"explanation-of-restrictions-list",children:[]},{value:"Predicate Proofs",id:"predicate-proofs",children:[]}]}],s={rightToc:d};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"introduction"},"Introduction"),Object(r.b)("p",null,"Verification Templates are a way to specify what data to request from a digital wallet. Whenever your organization wants to access information in an individual's wallet or identify someone based on their credentials, you can request the see a verification of the data on their credentials. This can be done digitally using a verification request. First, you'll need to decide what you need to know about the user. Define what attributes you will need to request. Then, decide how you will trust those attributes. You can specify who you trust by the Credential Definition, Schema ID, or Issuer of that data. These are the public pieces of information on the Sovrin network that provide the trust."),Object(r.b)("p",null,"Self-attested data is the most basic form of trusted data. You might decide to trust anything the agent sends back. This is similar to how current forms either in person or on the web exist. Perhaps some third-party verification might go on behind the scenes, but for many situations, it doesn't matter where the data has come from. "),Object(r.b)("p",null,"Other situations call for more trust. A police officer would need to know who issued someone's drivers license. Our API provides support for both kinds of requested data."),Object(r.b)("h2",{id:"create-a-verification-definition"},"Create a Verification Definition"),Object(r.b)("a",{href:"https://app.swaggerhub.com/apis-docs/Streetcred/agency/v1#/Definitions/CreateVerificationDefinition",target:"_blank"},"POST /definitions/verifications"),Object(r.b)("p",null,"A verification definition is created and saved on your cloud agent. You can discover your definition based on the ID that is returned or the name."),Object(r.b)(b.a,{defaultValue:"json",values:[{label:"JSON",value:"json"},{label:"Javascript",value:"js"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"json",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "name": "string", // Required. Your chosen name for this verification definition\n  "version": "string", // Required. The version of the verification definition. Must be in Semantic Versioning format (eg 1.1.0 or 2.3.14-alpha) - https://semver.org/\n  "nonce": "string", // Optional. Generally should not be included or set to null unless necessary for testing (TODO: WHAT IS THIS REALLY DOING?)\n  "requested_attributes": { // Optional. All attribute proofs in here will return the attribute values when requested.\n    "additionalProp1": { // Optional. This name will show up on a wallet as the name of the proof that is defined as the value\n      "name": "string", // Required. This value must match the Attribute Name exactly as it is stored in the agent\'s wallet\n      "restrictions": [ // Optional. Restrictions defined in the list below will filter the proof based on the identifiers that are provided.\n        { // Restrictions given within the same object will be evaluated with AND operations. Restrictions given between different objects will be evalued as OR operations\n          "cred_def_id": "string", // The credential definition ID of the credential\n          "issuer_did": "string", // The issuer\'s public DID that can be resolved on the ledger\n          "schema_id": "string", // The schema ID of the credential\n          "schema_issuer_did": "string", // The issuer DID of the schema ID of the credential\n          "schema_name": "string", // The exact name of the schema\n          "schema_version": "string" // The exact version of the schema\n        },\n        {\n          ... // additional requirements\n        }\n      ],\n    },\n    ...  // additional attribute proofs can be defined here\n  },\n  "requested_predicates": { // Optional. All proofs defined here will return a bool if the attribute fulfills the given requirements\n    "additionalProp1": { // Optional. The proof name. This will be displayed within the verification request sent to the wallet\n      "p_type": "string", // Required. Predicate Type. >=, <=, or == are the only available options.\n      "p_value": "string", // Required. The value (y) to be compared with the attribute value (x) as such: x (operator) y.\n      "name": "string", // Required. See above\n      "restrictions": [ // See above\n        {\n          "schema_id": "string",\n          "schema_issuer_did": "string",\n          "schema_name": "string",\n          "schema_version": "string",\n          "issuer_did": "string",\n          "cred_def_id": "string"\n        }\n      ],\n    },\n    ... // additional predicate proofs\n  }\n}\n'))),Object(r.b)(l.a,{value:"js",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'const verificationDefinition = await client.createVerificationDefinition({\n  proofRequest: {\n    name: "Proof of Employment",\n    version: "1.0",\n    requestedAttributes: {\n      "Verify Name": {\n        name: "Name",\n        restrictions: [\n          {\n            schemaId: credential.schemaId\n          },\n          {\n            credDefId: credential.credentialId\n          },\n          {\n            issuerDid: credential.issuerDid\n          }\n        ]\n      }\n    },\n    requestedPredicates: {\n      "Over Age": {\n        pType: ">=",\n        pValue: "21",\n        name: "Age",\n        restrictions: [\n          {\n            schemaId: credential.schemaId\n          }\n        ]\n      }\n    }\n  }\n});\n')))),Object(r.b)("h3",{id:"proof-request-parameters"},"Proof Request Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Name"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. Your chosen name for this verification definition")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Version"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. The version of the verification definition. Must be in Semantic Versioning format (eg 1.1.0 or 2.3.14-alpha) - ",Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"https://semver.org/"}),"https://semver.org/"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Nonce"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. Your chosen name for this verification definition")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Requested Attributes"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Optional. All attribute proofs in here will return the attribute")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Proof Name"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Optional. The proof name. This will be displayed within the verification request sent to the wallet")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Attribute Name"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. This value must match the Attribute Name exactly as it is stored in the agent's wallet")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Restrictions"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Optional. Restrictions defined in the list below will filter the proof. Restrictions given within the same object will be evaluated with AND operations.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Credential Definition ID"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The credential definition ID of the credential")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Issuer DID"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The issuer's public DID that can be resolved on the ledger")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Schema ID"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The schema ID of the credential")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Schema Issuer DID"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The issuer DID of the whoever created the schema ID of the credential")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Schema Version"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The exact version of the schema")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Requested Predicates"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Optional. All proofs defined here will return a bool if the attribute fulfills the given requirements")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate Type"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. Predicate Type. >=, <=, or == are the only available options.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Predicate Value"),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. The value (y) to be compared with the attribute value (x) as such: x (operator) y.")))),Object(r.b)("h3",{id:"response"},"Response"),Object(r.b)(b.a,{defaultValue:"json",values:[{label:"JSON",value:"json"},{label:"Javascript",value:"js"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"json",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'\n{\n  "id": "37f74f39-97ed-4028-a0ec-30b2bbd88012",\n  "data": {\n    "name": "Test Name",\n    ... // proof request body as defined above\n  }\n}\n')))),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"id")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The verification definition ID")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"data")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the Proof Request object defined ",Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#proof-request-parameters"}),"above"))))),Object(r.b)("h2",{id:"list-all-verification-definitions"},"List all Verification Definitions"),Object(r.b)("a",{href:"https://app.swaggerhub.com/apis-docs/Streetcred/agency/v1#/Definitions/ListVerificationDefinitions"},"GET /definitions/verifications"),"This will list all of the verification definitions that you have created with your organization.",Object(r.b)("h3",{id:"response-1"},"Response"),Object(r.b)(b.a,{defaultValue:"json",values:[{label:"JSON",value:"json"}],mdxType:"Tabs"},Object(r.b)(l.a,{value:"json",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'[\n  {\n    "id": "37f74f39-97ed-4028-a0ec-30b2bbd88012",\n    "data": {\n      "name": "Test Name",\n      ... // proof request body as defined above\n    }\n  }, \n  {\n    "id": "50209c7d-7a69-4d83-acb1-e3ad30758884",\n    "data": {\n      "name": "Test Name 2",\n      ... // proof request body as defined above\n    }\n  },  \n]\n')))),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"id")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The verification definition ID")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"data")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the Proof Request object defined ",Object(r.b)("a",Object(a.a)({parentName:"td"},{href:"#proof-request-parameters"}),"above"))))),Object(r.b)("h2",{id:"get-the-specified-verification-definition"},"Get the specified verification definition"),Object(r.b)("a",{href:"https://app.swaggerhub.com/#/Definitions/GetVerificationDefinition",target:"_blank"},"GET /definitions/verifications/","{definitionId}"),Object(r.b)("p",null,"Use the verification definition ID to get a specific verification definition."),Object(r.b)("h3",{id:"parameters"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"definitionId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. The verification definition Identifier")))),Object(r.b)("h3",{id:"response-2"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "id": "string",\n  "data": {\n    "name": "Test Name"\n    ... // the Proof Request\n  }\n}\n')),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"id")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The verification definition ID")))),Object(r.b)("h2",{id:"list-all-verifications-for-a-connection"},"List all verifications for a connection"),Object(r.b)("a",{href:"https://app.swaggerhub.com/#/Verifications/ListVerificationsForConnection",target:"_blank"},"GET /verifications"),Object(r.b)("p",null,"Now that you have created a verification definition, you can use that definition to request verification of credentials from other agents."),Object(r.b)("p",null,"Use the verification definition ID to get a specific verification definition."),Object(r.b)("h3",{id:"parameters-1"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"connectionId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. The connection identifier")))),Object(r.b)("h3",{id:"response-3"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'[\n  {\n    "connectionId": "string",\n    "verificationId": "string",\n    "state": "Requested",\n    "createdAtUtc": "2020-02-05T04:20:11.732Z",\n    "updatedAtUtc": "2020-02-05T04:20:11.732Z",\n    "isValid": true,\n    "verifiedAtUtc": "2020-02-05T04:20:11.732Z",\n    "proof": {\n      "additionalProp1": {\n        "name": "string",\n        "value": "string",\n        "revealed": true,\n        "selfAttested": true,\n        "conditional": true\n      },\n      "additionalProp2": {\n        "name": "string",\n        "value": "string",\n        "revealed": true,\n        "selfAttested": true,\n        "conditional": true\n      },\n      "additionalProp3": {\n        "name": "string",\n        "value": "string",\n        "revealed": true,\n        "selfAttested": true,\n        "conditional": true\n      }\n    }\n  }\n]\n')),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"connectionId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The identifier of the connection. Note that this is not the pairwise DID of the connection. This can be found by getting the connection details with this ID")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"verificationId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The identifier of the verification that has been sent to the connection. This is unique for every verification sent to a connection.")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"state")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The state is in ",Object(r.b)("inlineCode",{parentName:"td"},"Requested")," when the verification is sent. It changes to ",Object(r.b)("inlineCode",{parentName:"td"},"Accepted")," or ",Object(r.b)("inlineCode",{parentName:"td"},"Rejected")," once the receiving agent send a response")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"createdAtUtc")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string($date-time)")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The time that the verification was created")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"udpatedAtUtc")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string($date-time)")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"the time that the state was last changed")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"isValid")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"boolean")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"This will be updated to either ",Object(r.b)("inlineCode",{parentName:"td"},"true")," or ",Object(r.b)("inlineCode",{parentName:"td"},"false")," when the when the verification has been verified")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"proof")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"object")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Contains the attributes that have been verified and the associated information about the attribute")))),Object(r.b)("h2",{id:"create-a-verification"},"Create a Verification"),Object(r.b)("a",{href:"https://app.swaggerhub.com/#/Verifications/CreateVerification",target:"_blank"},"POST /verifications"),Object(r.b)("p",null,"This endpoint can be used to send a verification definition to a connection, which will create a verification ID to track the response from the connection. "),Object(r.b)("h3",{id:"request"},"Request"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "verificationDefinitionId": "string",\n  "connectionId": "string"\n}\n')),Object(r.b)("h3",{id:"parameters-2"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"verificationDefinitionId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. The verification identifier")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"connectionId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The connection identifier. This connection should be in state ",Object(r.b)("inlineCode",{parentName:"td"},"Connected")," in order to receive the verification")))),Object(r.b)("h3",{id:"response-4"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "id": "string"\n}\n')),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"id")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"The verification ID")))),Object(r.b)("h2",{id:"get-verification-by-identifier"},"Get verification by identifier"),Object(r.b)("a",{href:"https://app.swaggerhub.com/#/Verifications/GetVerification",target:"_blank"},"GET /verifications/","{verificationId}"),Object(r.b)("p",null,"This endpoint should be used to  "),Object(r.b)("h3",{id:"parameters-3"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"verificationId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. The verification identifier")))),Object(r.b)("h3",{id:"response-5"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "connectionId": "string",\n  "verificationId": "string",\n  "state": "Requested",\n  "createdAtUtc": "2020-02-05T04:39:47.915Z",\n  "updatedAtUtc": "2020-02-05T04:39:47.915Z",\n  "isValid": true,\n  "verifiedAtUtc": "2020-02-05T04:39:47.915Z",\n  "proof": {\n    "additionalProp1": {\n      "name": "string",\n      "value": "string",\n      "revealed": true,\n      "selfAttested": true,\n      "conditional": true\n    },\n    "additionalProp2": {\n      "name": "string",\n      "value": "string",\n      "revealed": true,\n      "selfAttested": true,\n      "conditional": true\n    },\n    "additionalProp3": {\n      "name": "string",\n      "value": "string",\n      "revealed": true,\n      "selfAttested": true,\n      "conditional": true\n    }\n  }\n}\n')),Object(r.b)("p",null,"See above for description of attributes"),Object(r.b)("h2",{id:"execute-verification-for-ledger"},"Execute Verification for Ledger"),Object(r.b)("a",{href:"https://app.swaggerhub.com/#/Verifications/VerifyVerification",target:"_blank"},"GET /verifications/","{verificationId}","/verify"),Object(r.b)("p",null,"Verify the proof against the ledger"),Object(r.b)("h3",{id:"parameters-4"},"Parameters"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Field"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"verificationId")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"string")),Object(r.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Required. The verification identifier")))),Object(r.b)("h3",{id:"response-6"},"Response"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  "connectionId": "string",\n  "verificationId": "string",\n  "state": "Requested",\n  "createdAtUtc": "2020-02-05T04:39:47.915Z",\n  "updatedAtUtc": "2020-02-05T04:39:47.915Z",\n  "isValid": true,\n  "verifiedAtUtc": "2020-02-05T04:39:47.915Z",\n  "proof": {\n    "additionalProp1": {\n      "name": "string",\n      "value": "string",\n      "revealed": true,\n      "selfAttested": true,\n      "conditional": true\n    },\n    "additionalProp2": {\n      "name": "string",\n      "value": "string",\n      "revealed": true,\n      "selfAttested": true,\n      "conditional": true\n    },\n    "additionalProp3": {\n      "name": "string",\n      "value": "string",\n      "revealed": true,\n      "selfAttested": true,\n      "conditional": true\n    }\n  }\n}\n')),Object(r.b)("h2",{id:"additional-information"},"Additional Information"),Object(r.b)("h3",{id:"explanation-of-restrictions-list"},"Explanation of Restrictions List"),Object(r.b)("p",null,"In the verification template, the ",Object(r.b)("inlineCode",{parentName:"p"},"restrictions")," list defines where this data is allowed to come from. The three most useful options include:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"schemaId"),": anyone who creates a credential with a certain schema ID can issue it to an individual. The schema ID only provides trust that the data is in the correct format."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"credentialDefinitionId"),": Because a credential definition is signed by an issuer, the credential definition defines both the format of the data and also who sent it to the wallet. This is the most commonly used restriction when contructing definitions. The credential definition would be an ID that is written to the sovrin ledger, and will prove that the credential an agent sends to you is both issued by the organization and is in the format that you need."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"issuerDid"),": for situations where you only care about where the credential is from and not what format the data is in, you may also use only the issuer's DID. This is also resolvable on the sovrin network and will prove that the data you have received was sent from a trusted source. It will not provide any information around the format of the data that you're receiving.")),Object(r.b)("p",null,"When sending a Proof Request, you may choose to request an Attribute Proof (TODO: FIND BETTER NAME) or a Predicate Proof. The attribute proofs will reveal the actual data of each attribute you request. The Predicate proofs will only return a ",Object(r.b)("inlineCode",{parentName:"p"},"True")," or ",Object(r.b)("inlineCode",{parentName:"p"},"False")," value on whether the attribute matches your specified query. For example, if someone's ",Object(r.b)("inlineCode",{parentName:"p"},"Date of Birth")," is before 1998, you may request that the person provide their ",Object(r.b)("inlineCode",{parentName:"p"},"Year of Birth")," attribute, and only from the ",Object(r.b)("inlineCode",{parentName:"p"},"Driver's License")," or ",Object(r.b)("inlineCode",{parentName:"p"},"Passport")," credentials issued by the ",Object(r.b)("inlineCode",{parentName:"p"},"US Government"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'{\n  ...\n  "proof_of_year_of_birth": {\n    "p_type": "<=",\n    "p_value": "1998",\n    "name": "Year of Birth",\n    "restrictions": [\n      {\n        "cred_def_id": "<US_drivers_license_cred_def_id>"\n      },\n      {\n        "cred_def_id": "<drivers_license_cred_def_id>"\n      }\n    ]\n  }\n   ...\n}\n')),Object(r.b)("p",null,"This will return either a ",Object(r.b)("inlineCode",{parentName:"p"},"true")," or ",Object(r.b)("inlineCode",{parentName:"p"},"false")," value to the attribute that a user supplies. If the value's signature matches the signatures stored in the credential definition, it will return true. This value can be trusted to have come from whichever Credential Definition ID has been specified, which can only be created by a unique issuer on the sovrin network."),Object(r.b)("h3",{id:"predicate-proofs"},"Predicate Proofs"),Object(r.b)("p",null,"Predicate proofs have three possible types: ",Object(r.b)("inlineCode",{parentName:"p"},">="),", ",Object(r.b)("inlineCode",{parentName:"p"},"<="),", and ",Object(r.b)("inlineCode",{parentName:"p"},"=="),". The ",Object(r.b)("inlineCode",{parentName:"p"},"name")," must match the attribute name exactly, both in spelling and in capitalization in order to be recognized."))}p.isMDXComponent=!0},164:function(e,t,n){var a;!function(){"use strict";var n={}.hasOwnProperty;function i(){for(var e=[],t=0;t<arguments.length;t++){var a=arguments[t];if(a){var r=typeof a;if("string"===r||"number"===r)e.push(a);else if(Array.isArray(a)&&a.length){var b=i.apply(null,a);b&&e.push(b)}else if("object"===r)for(var l in a)n.call(a,l)&&a[l]&&e.push(l)}}return e.join(" ")}e.exports?(i.default=i,e.exports=i):void 0===(a=function(){return i}.apply(t,[]))||(e.exports=a)}()},165:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return O}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=i.a.createContext({}),d=function(e){var t=i.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},s=function(e){var t=d(e.components);return i.a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),s=d(n),u=a,O=s["".concat(b,".").concat(u)]||s[u]||p[u]||r;return n?i.a.createElement(O,l({ref:t},o,{components:n})):i.a.createElement(O,l({ref:t},o))}));function O(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,b=new Array(r);b[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,b[1]=l;for(var o=2;o<r;o++)b[o]=n[o];return i.a.createElement.apply(null,b)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},187:function(e,t,n){"use strict";n(23),n(18),n(19);var a=n(0),i=n.n(a),r=n(164),b=n.n(r),l=n(122),c=n.n(l),o=37,d=39;t.a=function(e){var t=e.block,n=e.children,r=e.defaultValue,l=e.values,s=Object(a.useState)(r),p=s[0],u=s[1],O=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:b()("tabs",{"tabs--block":t})},l.map((function(e){var t=e.value,n=e.label;return i.a.createElement("li",{role:"tab",tabIndex:"0","aria-selected":p===t,className:b()("tab-item",c.a.tabItem,{"tab-item--active":p===t}),key:t,ref:function(e){return O.push(e)},onKeyDown:function(e){return function(e,t,n){switch(n.keyCode){case d:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case o:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(O,e.target,e)},onFocus:function(){return u(t)},onClick:function(){return u(t)}},n)}))),i.a.createElement("div",{role:"tabpanel",className:"margin-vert--md"},a.Children.toArray(n).filter((function(e){return e.props.value===p}))[0]))}},188:function(e,t,n){"use strict";var a=n(0),i=n.n(a);t.a=function(e){return i.a.createElement("div",null,e.children)}}}]);